if_else(
operation %>% str_detect("\\."),
operation %>% str_replace("\\.", expression),
map2_chr(operation, expression, function(x,y) paste0(x, y, collapse = " "))
))
tbl_algorithm %>%
select(-operation) %>%
knitr::kable(format = "html") %>%
kableExtra::kable_styling(bootstrap_options = "striped", full_width = FALSE)
ho_rate_tables <-
list(
# Base rate
tbl_base =
tribble(
~peril,     ~value,
"all_perils", 500),
tbl_aoi =
tribble(
~aoi,     ~value,
80 ,0.56
,95 ,0.63
,110,0.69
,125,0.75
,140,0.81
,155,0.86
,170,0.91
,185,0.96
,200,1.00
,215,1.04
,230,1.08
,245,1.12
,260,1.16
,275,1.20
,290,1.24
,305,1.28
,320,1.32
,335,1.36
,350,1.39
,365,1.42
,380,1.45
,395,1.48
,410,1.51
,425,1.54
,440,1.57
,455,1.60
,470,1.63
,485,1.66
,500,1.69
,15 ,0.03),
tbl_territory =
tribble(
~territory,     ~value,
1,0.80,
2,0.90,
3,1.00,
4,1.10,
5,1.15),
tbl_protection_class =
tribble(
~protection_class, ~construction_type, ~value,
1, "frame",  1.00,
2, "frame",  1.00,
3, "frame",  1.00,
4, "frame",  1.00,
5, "frame",  1.05,
6, "frame",  1.10,
7, "frame",  1.15,
8, "frame",  1.25,
9, "frame",  2.10,
10,"frame",  2.30,
1, "masonry",0.90,
2, "masonry",0.90,
3, "masonry",0.90,
4, "masonry",0.90,
5, "masonry",1.00,
6, "masonry",1.05,
7, "masonry",1.10,
8, "masonry",1.15,
9, "masonry",1.75,
10,"masonry",1.90),
tbl_uw_tier =
tibble(
uw_tier = LETTERS[1:10],
value    = 1:10 * 0.12 + 0.7),
tbl_deductible =
tribble(
~deductible, ~value,
250,  1.00,
500,  0.95,
1000, 0.85,
5000, 0.70),
tbl_credits =
tribble(
~credit,       ~value,
"new home",    0.2,
"claims free", 0.1,
"multipolicy", 0.08),
tbl_jewelry =
tribble(
~limit, ~value,
2500, 0,
5000, 35,
10000, 60),
tbl_increased_liability =
tribble(
~limit_liability_medpay, ~value,
"$100,000/$500",   0,
"$300,000/$1,000", 25,
"$500,000/$2,500", 45),
tbl_expense_fee =
tribble(
~form, ~value,
"HO3", 50)
)
ho_rate_tables
n_draw <- 50
# For each table, draw n_draw random numbers.
random_draw <-
ho_rate_tables %>%
lapply(
function(x) {
nrow(x) %>%
sample(n_draw, replace = TRUE) %>%
lapply(function(y) x[y,]) %>% bind_rows})
random_draw
# For each table, draw n_draw random numbers.
random_draw <-
ho_rate_tables %>%
lapply(
function(x) {
nrow(x) %>%
sample(n_draw, replace = TRUE) %>%
lapply(function(y) x[y,]) %>% bind_rows}) %>% bind_rows
random_draw
# For each table, draw n_draw random numbers.
random_draw <-
ho_rate_tables %>%
lapply(
function(x) {
nrow(x) %>%
sample(n_draw, replace = TRUE) %>%
lapply(function(y) x[y,]) %>% bind_rows}) %>% bind_cols
random_draw
ho_rate_tables %>%
map(function(x) names(x))
# For each table, draw n_draw random numbers.
random_draw <-
ho_rate_tables %>%
lapply(
function(x) {
nrow(x) %>%
sample(n_draw, replace = TRUE) %>%
lapply(function(y) x[y, -value]) %>% bind_rows}) %>% bind_cols
# For each table, draw n_draw random numbers.
random_draw <-
ho_rate_tables %>%
lapply(
function(x) {
nrow(x) %>%
sample(n_draw, replace = TRUE) %>%
lapply(function(y) x[y, -ncol(x)]) %>% bind_rows}) %>% bind_cols
random_draw
# Number of records we want to generate.
n_draw <- 10000
# For each table, draw n_draw random numbers.
uniform_dist_iid <-
ho_rate_tables %>%
lapply(
function(x) {
nrow(x) %>%
sample(n_draw, replace = TRUE) %>%
lapply(function(y) x[y, -ncol(x)]) %>% bind_rows}) %>%
bind_cols
uniform_dist_iid
ho_rate_tables <-
list(
# Base rate
tbl_base =
tribble(
~peril,     ~value,
"all_perils", 500),
tbl_aoi =
tribble(
~aoi,     ~value,
80 ,0.56
,95 ,0.63
,110,0.69
,125,0.75
,140,0.81
,155,0.86
,170,0.91
,185,0.96
,200,1.00
,215,1.04
,230,1.08
,245,1.12
,260,1.16
,275,1.20
,290,1.24
,305,1.28
,320,1.32
,335,1.36
,350,1.39
,365,1.42
,380,1.45
,395,1.48
,410,1.51
,425,1.54
,440,1.57
,455,1.60
,470,1.63
,485,1.66
,500,1.69
,15 ,0.03),
tbl_territory =
tribble(
~territory,     ~value,
1,0.80,
2,0.90,
3,1.00,
4,1.10,
5,1.15),
tbl_protection_class =
tribble(
~protection_class, ~construction_type, ~value,
1, "frame",  1.00,
2, "frame",  1.00,
3, "frame",  1.00,
4, "frame",  1.00,
5, "frame",  1.05,
6, "frame",  1.10,
7, "frame",  1.15,
8, "frame",  1.25,
9, "frame",  2.10,
10,"frame",  2.30,
1, "masonry",0.90,
2, "masonry",0.90,
3, "masonry",0.90,
4, "masonry",0.90,
5, "masonry",1.00,
6, "masonry",1.05,
7, "masonry",1.10,
8, "masonry",1.15,
9, "masonry",1.75,
10,"masonry",1.90),
tbl_uw_tier =
tibble(
uw_tier = LETTERS[1:10],
value    = 1:10 * 0.12 + 0.7),
tbl_deductible =
tribble(
~deductible, ~value,
250,  1.00,
500,  0.95,
1000, 0.85,
5000, 0.70),
tbl_credits =
tribble(
~credit,       ~value,
"new home",    0.2,
"claims free", 0.1,
"multipolicy", 0.08),
tbl_jewelry =
tribble(
~jewelry_limit, ~value,
2500, 0,
5000, 35,
10000, 60),
tbl_increased_liability =
tribble(
~limit_liability_medpay, ~value,
"$100,000/$500",   0,
"$300,000/$1,000", 25,
"$500,000/$2,500", 45),
tbl_expense_fee =
tribble(
~form, ~value,
"HO3", 50)
)
ho_rate_tables
# Number of records we want to generate.
n_draw <- 10000
# For each table, draw n_draw random numbers.
uniform_dist_iid <-
ho_rate_tables %>%
lapply(
function(x) {
nrow(x) %>%
sample(n_draw, replace = TRUE) %>%
lapply(function(y) x[y, -ncol(x)]) %>% bind_rows}) %>%
bind_cols %>%
cbind(policy_number = 1:nrow(.) %>% formatC(digits = length(n_draw)), .)
uniform_dist_iid
length(n_draw)
nchar(n_draw)
# For each table, draw n_draw random numbers.
uniform_dist_iid <-
ho_rate_tables %>%
lapply(
function(x) {
nrow(x) %>%
sample(n_draw, replace = TRUE) %>%
lapply(function(y) x[y, -ncol(x)]) %>% bind_rows}) %>%
bind_cols %>%
cbind(policy_number = 1:nrow(.) %>% str_pad(nchar(n_draw), pad = "0"), .)
uniform_dist_iid
ho_rate_tables %>%
lapply(function(x) x %>% left_join(uniform_dist_iid))
uniform_dist_iid_dat <-
ho_rate_tables %>%
lapply(function(x) x %>% left_join(uniform_dist_iid))
uniform_dist_iid_dat
uniform_dist_iid_dat <-
ho_rate_tables %>%
lapply(function(x) x %>% left_join(uniform_dist_iid)) %>% bind_cols()
uniform_dist_iid_dat
uniform_dist_iid_dat <-
uniform_dist_iid_dat %>%
mutate(
factors =
ho_rate_tables %>%
map(function(x) x %>% left_join(uniform_dist_iid)))
uniform_dist_iid_dat <-
ho_rate_tables %>%
lapply(function(x) x %>% left_join(uniform_dist_iid))
uniform_dist_iid_dat <-
ho_rate_tables %>%
lapply(function(x) x %>% left_join(uniform_dist_iid)) %>%
.[ncol(.)]
uniform_dist_iid_dat
uniform_dist_iid_dat <-
ho_rate_tables %>%
lapply(function(x) x %>% left_join(uniform_dist_iid)) %>%
.[, ncol(.)]
uniform_dist_iid_dat <-
# For each table, draw n_draw random numbers.
uniform_dist_iid <-
ho_rate_tables %>%
lapply(
function(x) {
nrow(x) %>%
sample(n_draw, replace = TRUE) %>%
lapply(function(y) x[y, -ncol(x)]) %>% bind_rows}) %>%
bind_cols %>%
cbind(policy_number = 1:nrow(.) %>% str_pad(nchar(n_draw), pad = "0"), .)
uniform_dist_iid_dat <-
ho_rate_tables %>%
lapply(function(x) x %>% left_join(uniform_dist_iid)) %>%
.[ncol(.)]
uniform_dist_iid_dat
# For each table, draw n_draw random numbers.
uniform_dist_iid <-
ho_rate_tables %>%
lapply(
function(x) {
nrow(x) %>%
sample(n_draw, replace = TRUE) %>%
lapply(function(y) x[y, -ncol(x)]) %>% bind_rows}) %>%
bind_cols %>%
cbind(policy_number = 1:nrow(.) %>% str_pad(nchar(n_draw), pad = "0"), .)
uniform_dist_iid_dat <-
ho_rate_tables %>%
lapply(function(x) x %>% left_join(uniform_dist_iid))
uniform_dist_iid_dat
uniform_dist_iid_dat <-
ho_rate_tables %>%
lapply(function(x) x %>% left_join(uniform_dist_iid) %>% .$value)
uniform_dist_iid_dat
uniform_dist_iid_dat <-
ho_rate_tables %>%
lapply(function(x) x %>% left_join(uniform_dist_iid))
uniform_dist_iid_dat
uniform_dist_iid_dat <-
ho_rate_tables %>%
lapply(function(x) (x %>% left_join(uniform_dist_iid))$value)
uniform_dist_iid_dat
# For each table, draw n_draw random numbers.
uniform_dist_iid <-
ho_rate_tables %>%
lapply(
function(x) {
nrow(x) %>%
sample(n_draw, replace = TRUE) %>%
lapply(function(y) x[y, -ncol(x)]) %>% bind_rows}) %>%
bind_cols %>%
cbind(policy_number = 1:nrow(.) %>% str_pad(nchar(n_draw), pad = "0"), .)
# For each table, draw n_draw random numbers.
uniform_dist_iid <-
ho_rate_tables %>%
lapply(
function(x) {
nrow(x) %>%
sample(n_draw, replace = TRUE) %>%
lapply(function(y) x[y, -ncol(x)]) %>% bind_rows}) %>%
bind_cols %>%
cbind(policy_number = 1:nrow(.) %>% str_pad(nchar(n_draw), pad = "0"), .)
uniform_dist_iid
uniform_dist_iid %>% left_join(ho_rate_tables$tbl_territory)
uniform_dist_iid_dat <-
ho_rate_tables %>%
lapply(function(x) (x %>% right_join(uniform_dist_iid))$value)
uniform_dist_iid_dat
uniform_dist_iid_dat <-
ho_rate_tables %>%
lapply(function(x) (x %>% right_join(uniform_dist_iid))$value) %>% cbind
uniform_dist_iid_dat
uniform_dist_iid_dat <-
ho_rate_tables %>%
lapply(function(x) (x %>% right_join(uniform_dist_iid))$value) %>% bind_rows
uniform_dist_iid_dat
uniform_dist_iid_dat %>% names
uniform_dist_iid_dat %>%
with(
tbl_base *
tbl_aoi *
tbl_territory *
tbl_protection_class *
tbl_uw_tier *
tbl_deductible *
(1 - tbl_credits) +
tbl_jewelry +
tbl_increased_liability +
tbl_expense_fee
)
uniform_dist_iid_dat %>%
with(
tbl_base *
tbl_aoi *
tbl_territory *
tbl_protection_class *
tbl_uw_tier *
tbl_deductible *
(1 - tbl_credits) +
tbl_jewelry +
tbl_increased_liability +
tbl_expense_fee %>%
round
)
uniform_dist_iid_dat %>%
with(
tbl_base *
tbl_aoi *
tbl_territory *
tbl_protection_class *
tbl_uw_tier *
tbl_deductible *
(1 - tbl_credits) +
tbl_jewelry +
tbl_increased_liability +
tbl_expense_fee %>%
round(0)
)
uniform_dist_iid_dat %>%
with(
(tbl_base *
tbl_aoi *
tbl_territory *
tbl_protection_class *
tbl_uw_tier *
tbl_deductible *
(1 - tbl_credits) +
tbl_jewelry +
tbl_increased_liability +
tbl_expense_fee) %>%
round(0)
)
uniform_dist_iid_dat %>%
mutate(
premium =
tbl_base *
tbl_aoi *
tbl_territory *
tbl_protection_class *
tbl_uw_tier *
tbl_deductible *
(1 - tbl_credits) +
tbl_jewelry +
tbl_increased_liability +
tbl_expense_fee,
premium = premium %>% round
)
View(uniform_dist_iid)
View(uniform_dist_iid)
# Need to use the formula we already laid out above somehow.  This is just to keep going.
uniform_dist_iid_rating <-
ho_rate_tables %>%
lapply(function(x) (x %>% right_join(uniform_dist_iid))$value) %>%
bind_rows %>%
mutate(
premium =
tbl_base *
tbl_aoi *
tbl_territory *
tbl_protection_class *
tbl_uw_tier *
tbl_deductible *
(1 - tbl_credits) +
tbl_jewelry +
tbl_increased_liability +
tbl_expense_fee,
premium = premium %>% round
)
uniform_dist_iid %>% cbind(uniform_dist_iid_rating$premium)
# Inpute premium data onto rating data
uniform_dist_iid <-
uniform_dist_iid %>%
inner_join(uniform_dist_iid_rating)
# Inpute premium data onto rating data
uniform_dist_iid <-
uniform_dist_iid %>%
cbind(premium = uniform_dist_iid_rating$premium)
uniform_dist_iid
